//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.0 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.04.03 at 06:02:34 PM PDT 
//


package neuroml.generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the neuroml.generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Neuroml_QNAME = new QName("http://morphml.org/neuroml/schema", "neuroml");
    private final static QName _Morphml_QNAME = new QName("http://morphml.org/morphml/schema", "morphml");
    private final static QName _Channelml_QNAME = new QName("http://morphml.org/channelml/schema", "channelml");
    private final static QName _Networkml_QNAME = new QName("http://morphml.org/networkml/schema", "networkml");
    private final static QName _Biophysics_QNAME = new QName("http://morphml.org/biophysics/schema", "biophysics");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: neuroml.generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Person }
     * 
     */
    public Person createPerson() {
        return new Person();
    }

    /**
     * Create an instance of {@link RateAdjustments.Offset }
     * 
     */
    public RateAdjustments.Offset createRateAdjustmentsOffset() {
        return new RateAdjustments.Offset();
    }

    /**
     * Create an instance of {@link DoubleExponentialSynapse }
     * 
     */
    public DoubleExponentialSynapse createDoubleExponentialSynapse() {
        return new DoubleExponentialSynapse();
    }

    /**
     * Create an instance of {@link InputTarget }
     * 
     */
    public InputTarget createInputTarget() {
        return new InputTarget();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link ChannelType }
     * 
     */
    public ChannelType createChannelType() {
        return new ChannelType();
    }

    /**
     * Create an instance of {@link IntegrateAndFire }
     * 
     */
    public IntegrateAndFire createIntegrateAndFire() {
        return new IntegrateAndFire();
    }

    /**
     * Create an instance of {@link PlasticSynapse }
     * 
     */
    public PlasticSynapse createPlasticSynapse() {
        return new PlasticSynapse();
    }

    /**
     * Create an instance of {@link Polyhedron }
     * 
     */
    public Polyhedron createPolyhedron() {
        return new Polyhedron();
    }

    /**
     * Create an instance of {@link ConnectivityPattern }
     * 
     */
    public ConnectivityPattern createConnectivityPattern() {
        return new ConnectivityPattern();
    }

    /**
     * Create an instance of {@link Properties }
     * 
     */
    public Properties createProperties() {
        return new Properties();
    }

    /**
     * Create an instance of {@link NamedParameter }
     * 
     */
    public NamedParameter createNamedParameter() {
        return new NamedParameter();
    }

    /**
     * Create an instance of {@link Polyhedron.Polygons }
     * 
     */
    public Polyhedron.Polygons createPolyhedronPolygons() {
        return new Polyhedron.Polygons();
    }

    /**
     * Create an instance of {@link RateAdjustments }
     * 
     */
    public RateAdjustments createRateAdjustments() {
        return new RateAdjustments();
    }

    /**
     * Create an instance of {@link ModelDBReference }
     * 
     */
    public ModelDBReference createModelDBReference() {
        return new ModelDBReference();
    }

    /**
     * Create an instance of {@link Projection }
     * 
     */
    public Projection createProjection() {
        return new Projection();
    }

    /**
     * Create an instance of {@link RandomArrangement }
     * 
     */
    public RandomArrangement createRandomArrangement() {
        return new RandomArrangement();
    }

    /**
     * Create an instance of {@link CurrentVoltageRelation }
     * 
     */
    public CurrentVoltageRelation createCurrentVoltageRelation() {
        return new CurrentVoltageRelation();
    }

    /**
     * Create an instance of {@link Transition }
     * 
     */
    public Transition createTransition() {
        return new Transition();
    }

    /**
     * Create an instance of {@link Feature }
     * 
     */
    public Feature createFeature() {
        return new Feature();
    }

    /**
     * Create an instance of {@link PoolVolumeInfo }
     * 
     */
    public PoolVolumeInfo createPoolVolumeInfo() {
        return new PoolVolumeInfo();
    }

    /**
     * Create an instance of {@link Morphology }
     * 
     */
    public Morphology createMorphology() {
        return new Morphology();
    }

    /**
     * Create an instance of {@link InhomogeneousParam.Proximal }
     * 
     */
    public InhomogeneousParam.Proximal createInhomogeneousParamProximal() {
        return new InhomogeneousParam.Proximal();
    }

    /**
     * Create an instance of {@link BlockingSynapse }
     * 
     */
    public BlockingSynapse createBlockingSynapse() {
        return new BlockingSynapse();
    }

    /**
     * Create an instance of {@link Ohmic }
     * 
     */
    public Ohmic createOhmic() {
        return new Ohmic();
    }

    /**
     * Create an instance of {@link Parameter }
     * 
     */
    public Parameter createParameter() {
        return new Parameter();
    }

    /**
     * Create an instance of {@link Annotation }
     * 
     */
    public Annotation createAnnotation() {
        return new Annotation();
    }

    /**
     * Create an instance of {@link Level2Cell }
     * 
     */
    public Level2Cell createLevel2Cell() {
        return new Level2Cell();
    }

    /**
     * Create an instance of {@link NeuronDBReference }
     * 
     */
    public NeuronDBReference createNeuronDBReference() {
        return new NeuronDBReference();
    }

    /**
     * Create an instance of {@link InputSites }
     * 
     */
    public InputSites createInputSites() {
        return new InputSites();
    }

    /**
     * Create an instance of {@link IonConcentration }
     * 
     */
    public IonConcentration createIonConcentration() {
        return new IonConcentration();
    }

    /**
     * Create an instance of {@link NeuroMLLevel1 .Cells }
     * 
     */
    public NeuroMLLevel1 .Cells createNeuroMLLevel1Cells() {
        return new NeuroMLLevel1 .Cells();
    }

    /**
     * Create an instance of {@link NeuroMLLevel2 }
     * 
     */
    public NeuroMLLevel2 createNeuroMLLevel2() {
        return new NeuroMLLevel2();
    }

    /**
     * Create an instance of {@link Segment }
     * 
     */
    public Segment createSegment() {
        return new Segment();
    }

    /**
     * Create an instance of {@link RateConstantEqn }
     * 
     */
    public RateConstantEqn createRateConstantEqn() {
        return new RateConstantEqn();
    }

    /**
     * Create an instance of {@link DecayingPoolModel }
     * 
     */
    public DecayingPoolModel createDecayingPoolModel() {
        return new DecayingPoolModel();
    }

    /**
     * Create an instance of {@link CableGroup.Cable }
     * 
     */
    public CableGroup.Cable createCableGroupCable() {
        return new CableGroup.Cable();
    }

    /**
     * Create an instance of {@link GridArrangement.Spacing }
     * 
     */
    public GridArrangement.Spacing createGridArrangementSpacing() {
        return new GridArrangement.Spacing();
    }

    /**
     * Create an instance of {@link FixedPoolInfo }
     * 
     */
    public FixedPoolInfo createFixedPoolInfo() {
        return new FixedPoolInfo();
    }

    /**
     * Create an instance of {@link FreePoints }
     * 
     */
    public FreePoints createFreePoints() {
        return new FreePoints();
    }

    /**
     * Create an instance of {@link Sphere }
     * 
     */
    public Sphere createSphere() {
        return new Sphere();
    }

    /**
     * Create an instance of {@link PropertyDetail }
     * 
     */
    public PropertyDetail createPropertyDetail() {
        return new PropertyDetail();
    }

    /**
     * Create an instance of {@link KSGate }
     * 
     */
    public KSGate createKSGate() {
        return new KSGate();
    }

    /**
     * Create an instance of {@link Instances }
     * 
     */
    public Instances createInstances() {
        return new Instances();
    }

    /**
     * Create an instance of {@link neuroml.generated.Cable }
     * 
     */
    public neuroml.generated.Cable createCable() {
        return new neuroml.generated.Cable();
    }

    /**
     * Create an instance of {@link ChannelML }
     * 
     */
    public ChannelML createChannelML() {
        return new ChannelML();
    }

    /**
     * Create an instance of {@link SynapseInternalProperties }
     * 
     */
    public SynapseInternalProperties createSynapseInternalProperties() {
        return new SynapseInternalProperties();
    }

    /**
     * Create an instance of {@link PotentialSynapticLocation }
     * 
     */
    public PotentialSynapticLocation createPotentialSynapticLocation() {
        return new PotentialSynapticLocation();
    }

    /**
     * Create an instance of {@link HHGate }
     * 
     */
    public HHGate createHHGate() {
        return new HHGate();
    }

    /**
     * Create an instance of {@link InitialMembPotential }
     * 
     */
    public InitialMembPotential createInitialMembPotential() {
        return new InitialMembPotential();
    }

    /**
     * Create an instance of {@link Publication }
     * 
     */
    public Publication createPublication() {
        return new Publication();
    }

    /**
     * Create an instance of {@link Block }
     * 
     */
    public Block createBlock() {
        return new Block();
    }

    /**
     * Create an instance of {@link InputSitePattern.PercentageCells }
     * 
     */
    public InputSitePattern.PercentageCells createInputSitePatternPercentageCells() {
        return new InputSitePattern.PercentageCells();
    }

    /**
     * Create an instance of {@link Inputs }
     * 
     */
    public Inputs createInputs() {
        return new Inputs();
    }

    /**
     * Create an instance of {@link NeuroMLLevel2 .Cells }
     * 
     */
    public NeuroMLLevel2 .Cells createNeuroMLLevel2Cells() {
        return new NeuroMLLevel2 .Cells();
    }

    /**
     * Create an instance of {@link UnnamedParameter }
     * 
     */
    public UnnamedParameter createUnnamedParameter() {
        return new UnnamedParameter();
    }

    /**
     * Create an instance of {@link Gate }
     * 
     */
    public Gate createGate() {
        return new Gate();
    }

    /**
     * Create an instance of {@link ImplementationPrefs.TableSettings }
     * 
     */
    public ImplementationPrefs.TableSettings createImplementationPrefsTableSettings() {
        return new ImplementationPrefs.TableSettings();
    }

    /**
     * Create an instance of {@link RandomStim }
     * 
     */
    public RandomStim createRandomStim() {
        return new RandomStim();
    }

    /**
     * Create an instance of {@link IonProperties }
     * 
     */
    public IonProperties createIonProperties() {
        return new IonProperties();
    }

    /**
     * Create an instance of {@link Cell.Cables }
     * 
     */
    public Cell.Cables createCellCables() {
        return new Cell.Cables();
    }

    /**
     * Create an instance of {@link Authors }
     * 
     */
    public Authors createAuthors() {
        return new Authors();
    }

    /**
     * Create an instance of {@link Connections }
     * 
     */
    public Connections createConnections() {
        return new Connections();
    }

    /**
     * Create an instance of {@link Input }
     * 
     */
    public Input createInput() {
        return new Input();
    }

    /**
     * Create an instance of {@link Mechanism }
     * 
     */
    public Mechanism createMechanism() {
        return new Mechanism();
    }

    /**
     * Create an instance of {@link InhomogeneousValue }
     * 
     */
    public InhomogeneousValue createInhomogeneousValue() {
        return new InhomogeneousValue();
    }

    /**
     * Create an instance of {@link NonSpatialGrid }
     * 
     */
    public NonSpatialGrid createNonSpatialGrid() {
        return new NonSpatialGrid();
    }

    /**
     * Create an instance of {@link Populations }
     * 
     */
    public Populations createPopulations() {
        return new Populations();
    }

    /**
     * Create an instance of {@link Plasticity }
     * 
     */
    public Plasticity createPlasticity() {
        return new Plasticity();
    }

    /**
     * Create an instance of {@link NetworkML }
     * 
     */
    public NetworkML createNetworkML() {
        return new NetworkML();
    }

    /**
     * Create an instance of {@link Path }
     * 
     */
    public Path createPath() {
        return new Path();
    }

    /**
     * Create an instance of {@link RateConstantEqnChoice }
     * 
     */
    public RateConstantEqnChoice createRateConstantEqnChoice() {
        return new RateConstantEqnChoice();
    }

    /**
     * Create an instance of {@link NeuroMLLevel1 }
     * 
     */
    public NeuroMLLevel1 createNeuroMLLevel1() {
        return new NeuroMLLevel1();
    }

    /**
     * Create an instance of {@link SynapticLocation }
     * 
     */
    public SynapticLocation createSynapticLocation() {
        return new SynapticLocation();
    }

    /**
     * Create an instance of {@link VariableNamedParameter }
     * 
     */
    public VariableNamedParameter createVariableNamedParameter() {
        return new VariableNamedParameter();
    }

    /**
     * Create an instance of {@link Spine }
     * 
     */
    public Spine createSpine() {
        return new Spine();
    }

    /**
     * Create an instance of {@link RectangularBox.Size }
     * 
     */
    public RectangularBox.Size createRectangularBoxSize() {
        return new RectangularBox.Size();
    }

    /**
     * Create an instance of {@link GroupDetail }
     * 
     */
    public GroupDetail createGroupDetail() {
        return new GroupDetail();
    }

    /**
     * Create an instance of {@link Cell.CellBody }
     * 
     */
    public Cell.CellBody createCellCellBody() {
        return new Cell.CellBody();
    }

    /**
     * Create an instance of {@link neuroml.generated.Cells }
     * 
     */
    public neuroml.generated.Cells createCells() {
        return new neuroml.generated.Cells();
    }

    /**
     * Create an instance of {@link Polygon }
     * 
     */
    public Polygon createPolygon() {
        return new Polygon();
    }

    /**
     * Create an instance of {@link Status }
     * 
     */
    public Status createStatus() {
        return new Status();
    }

    /**
     * Create an instance of {@link InhomogeneousParam }
     * 
     */
    public InhomogeneousParam createInhomogeneousParam() {
        return new InhomogeneousParam();
    }

    /**
     * Create an instance of {@link KSState }
     * 
     */
    public KSState createKSState() {
        return new KSState();
    }

    /**
     * Create an instance of {@link Morphology.PropertyDetails }
     * 
     */
    public Morphology.PropertyDetails createMorphologyPropertyDetails() {
        return new Morphology.PropertyDetails();
    }

    /**
     * Create an instance of {@link Projections }
     * 
     */
    public Projections createProjections() {
        return new Projections();
    }

    /**
     * Create an instance of {@link Ion }
     * 
     */
    public Ion createIon() {
        return new Ion();
    }

    /**
     * Create an instance of {@link Cell.Spines }
     * 
     */
    public Cell.Spines createCellSpines() {
        return new Cell.Spines();
    }

    /**
     * Create an instance of {@link Point }
     * 
     */
    public Point createPoint() {
        return new Point();
    }

    /**
     * Create an instance of {@link SynapseType }
     * 
     */
    public SynapseType createSynapseType() {
        return new SynapseType();
    }

    /**
     * Create an instance of {@link Points }
     * 
     */
    public Points createPoints() {
        return new Points();
    }

    /**
     * Create an instance of {@link Morphology.Features }
     * 
     */
    public Morphology.Features createMorphologyFeatures() {
        return new Morphology.Features();
    }

    /**
     * Create an instance of {@link ConnectivityPattern.FixedProbability }
     * 
     */
    public ConnectivityPattern.FixedProbability createConnectivityPatternFixedProbability() {
        return new ConnectivityPattern.FixedProbability();
    }

    /**
     * Create an instance of {@link InputSitePattern }
     * 
     */
    public InputSitePattern createInputSitePattern() {
        return new InputSitePattern();
    }

    /**
     * Create an instance of {@link SynapseProperties }
     * 
     */
    public SynapseProperties createSynapseProperties() {
        return new SynapseProperties();
    }

    /**
     * Create an instance of {@link Cell }
     * 
     */
    public Cell createCell() {
        return new Cell();
    }

    /**
     * Create an instance of {@link ConcDependence }
     * 
     */
    public ConcDependence createConcDependence() {
        return new ConcDependence();
    }

    /**
     * Create an instance of {@link Manifold }
     * 
     */
    public Manifold createManifold() {
        return new Manifold();
    }

    /**
     * Create an instance of {@link Biophysics }
     * 
     */
    public Biophysics createBiophysics() {
        return new Biophysics();
    }

    /**
     * Create an instance of {@link Gate.State }
     * 
     */
    public Gate.State createGateState() {
        return new Gate.State();
    }

    /**
     * Create an instance of {@link ImplementationPrefs }
     * 
     */
    public ImplementationPrefs createImplementationPrefs() {
        return new ImplementationPrefs();
    }

    /**
     * Create an instance of {@link GenericEquation }
     * 
     */
    public GenericEquation createGenericEquation() {
        return new GenericEquation();
    }

    /**
     * Create an instance of {@link AkdEquation }
     * 
     */
    public AkdEquation createAkdEquation() {
        return new AkdEquation();
    }

    /**
     * Create an instance of {@link PopulationLocation }
     * 
     */
    public PopulationLocation createPopulationLocation() {
        return new PopulationLocation();
    }

    /**
     * Create an instance of {@link ConnectivityPattern.AllToAll }
     * 
     */
    public ConnectivityPattern.AllToAll createConnectivityPatternAllToAll() {
        return new ConnectivityPattern.AllToAll();
    }

    /**
     * Create an instance of {@link SpecAxialResistance }
     * 
     */
    public SpecAxialResistance createSpecAxialResistance() {
        return new SpecAxialResistance();
    }

    /**
     * Create an instance of {@link RectangularBox }
     * 
     */
    public RectangularBox createRectangularBox() {
        return new RectangularBox();
    }

    /**
     * Create an instance of {@link CableGroup }
     * 
     */
    public CableGroup createCableGroup() {
        return new CableGroup();
    }

    /**
     * Create an instance of {@link Ohmic.Conductance }
     * 
     */
    public Ohmic.Conductance createOhmicConductance() {
        return new Ohmic.Conductance();
    }

    /**
     * Create an instance of {@link VoltageConcGate }
     * 
     */
    public VoltageConcGate createVoltageConcGate() {
        return new VoltageConcGate();
    }

    /**
     * Create an instance of {@link PerCellConnection }
     * 
     */
    public PerCellConnection createPerCellConnection() {
        return new PerCellConnection();
    }

    /**
     * Create an instance of {@link VariableParameter }
     * 
     */
    public VariableParameter createVariableParameter() {
        return new VariableParameter();
    }

    /**
     * Create an instance of {@link RateAdjustments.Q10Settings }
     * 
     */
    public RateAdjustments.Q10Settings createRateAdjustmentsQ10Settings() {
        return new RateAdjustments.Q10Settings();
    }

    /**
     * Create an instance of {@link InputSite }
     * 
     */
    public InputSite createInputSite() {
        return new InputSite();
    }

    /**
     * Create an instance of {@link Morphology.GroupDetails }
     * 
     */
    public Morphology.GroupDetails createMorphologyGroupDetails() {
        return new Morphology.GroupDetails();
    }

    /**
     * Create an instance of {@link CellInstance }
     * 
     */
    public CellInstance createCellInstance() {
        return new CellInstance();
    }

    /**
     * Create an instance of {@link InputSitePattern.AllCells }
     * 
     */
    public InputSitePattern.AllCells createInputSitePatternAllCells() {
        return new InputSitePattern.AllCells();
    }

    /**
     * Create an instance of {@link InhomogeneousParam.Distal }
     * 
     */
    public InhomogeneousParam.Distal createInhomogeneousParamDistal() {
        return new InhomogeneousParam.Distal();
    }

    /**
     * Create an instance of {@link GridArrangement }
     * 
     */
    public GridArrangement createGridArrangement() {
        return new GridArrangement();
    }

    /**
     * Create an instance of {@link SpecCapacitance }
     * 
     */
    public SpecCapacitance createSpecCapacitance() {
        return new SpecCapacitance();
    }

    /**
     * Create an instance of {@link VoltageGate }
     * 
     */
    public VoltageGate createVoltageGate() {
        return new VoltageGate();
    }

    /**
     * Create an instance of {@link Connection }
     * 
     */
    public Connection createConnection() {
        return new Connection();
    }

    /**
     * Create an instance of {@link Cell.Segments }
     * 
     */
    public Cell.Segments createCellSegments() {
        return new Cell.Segments();
    }

    /**
     * Create an instance of {@link RateConstVoltConcDep }
     * 
     */
    public RateConstVoltConcDep createRateConstVoltConcDep() {
        return new RateConstVoltConcDep();
    }

    /**
     * Create an instance of {@link PulseInput }
     * 
     */
    public PulseInput createPulseInput() {
        return new PulseInput();
    }

    /**
     * Create an instance of {@link Population }
     * 
     */
    public Population createPopulation() {
        return new Population();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NeuroMLLevel2 }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://morphml.org/neuroml/schema", name = "neuroml")
    public JAXBElement<NeuroMLLevel2> createNeuroml(NeuroMLLevel2 value) {
        return new JAXBElement<NeuroMLLevel2>(_Neuroml_QNAME, NeuroMLLevel2 .class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Morphology }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://morphml.org/morphml/schema", name = "morphml")
    public JAXBElement<Morphology> createMorphml(Morphology value) {
        return new JAXBElement<Morphology>(_Morphml_QNAME, Morphology.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelML }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://morphml.org/channelml/schema", name = "channelml")
    public JAXBElement<ChannelML> createChannelml(ChannelML value) {
        return new JAXBElement<ChannelML>(_Channelml_QNAME, ChannelML.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NetworkML }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://morphml.org/networkml/schema", name = "networkml")
    public JAXBElement<NetworkML> createNetworkml(NetworkML value) {
        return new JAXBElement<NetworkML>(_Networkml_QNAME, NetworkML.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Biophysics }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://morphml.org/biophysics/schema", name = "biophysics")
    public JAXBElement<Biophysics> createBiophysics(Biophysics value) {
        return new JAXBElement<Biophysics>(_Biophysics_QNAME, Biophysics.class, null, value);
    }

}
