package edu.ucsd.ccdb.ontomorph2.core.semantic;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

import edu.stanford.smi.protegex.owl.model.OWLIndividual;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.OWLNamedClass;
import edu.ucsd.ccdb.ontomorph2.util.OMTException;

/** 
 * Represents an OWL class.
 * 
 * @author Stephen D. Larson (slarson@ncmir.ucsd.edu)
 *
 */
public class SemanticClass extends SemanticThing {

	public static final String DENTATE_GYRUS_GRANULE_CELL_CLASS = "nif_cell:nifext_153";
	public static final String CA3_PYRAMIDAL_CELL_CLASS = "nif_cell:nifext_158";
	public static final String CA1_PYRAMIDAL_CELL_CLASS = "nif_cell:nifext_157";
	public static final String MITOCHONDRION_CLASS = "sao:sao1860313010";
	public static final String DENDRITE_CLASS = "sao:sao1211023249";
	public static final String APICAL_DENDRITE_CLASS = "sao:sao1211023249";
	public static final String SOMA_CLASS = "sao:sao1044911821";
	public static final String AXON_CLASS = "sao:sao1770195789";
	public static final String OBJECT_CLASS = "snap:Object";
	public static final String INDEPENDENT_CONTINUANT_CLASS = "snap:IndependentContinuant";
	public static final String CONTINUANT_CLASS = "snap:Continuant";
	public static final String CELL_CLASS = "sao:sao1813327414";
	public static final String HIPPOCAMPUS_CLASS = "birn_anat:birnlex_721";
	public static final String BRAIN_CLASS = "birn_anat:birnlex_796";
	public static final String HYPOTHALAMUS_CLASS = "birn_anat:birnlex_734";
	public static final String THALAMUS_CLASS = "birn_anat:birnlex_954";
	public static final String DENTATE_GYRUS_CLASS = "birn_anat:birnlex_1178";
	public static final String IMAGE_CLASS = "birn_invest:birnlex_2028";
	
	public static int counter = 1;
	
	OWLNamedClass OWLClass = null;

	public SemanticClass(OWLNamedClass owlClass, String uri) {
		this(owlClass);
		this.URI = uri;
	}
	
	public SemanticClass(OWLNamedClass owlClass) {
		OWLClass = owlClass;
	}

	/**
	 * Get the OWL label
	 */
	public String getLabel() {
		return SemanticRepository.getAvailableInstance().getClassLabel(OWLClass, URI);
	}
	
	public String toString() {
		return getLabel();
	}
	
	/**
	 * Get direct instances of this class
	 * @return
	 */
	public List<SemanticInstance> getInstances() {
		return SemanticRepository.getAvailableInstance().getInstances(this);
	}

	public List<SemanticInstance> getAllInstances(OWLModel owlModel) {
		return SemanticRepository.getAvailableInstance().getAllInstances(this, owlModel);
	}

	public String getId() {
		return OWLClass.getName();
	}
	
	public String getURI() {
		return this.URI;
	}
	
	public OWLNamedClass getOWLClass() {
		return OWLClass;
	}
	
	/**
	 * Creates an individual of this class in the knowledge base
	 * @return a SemanticInstance that encapsulates the new individual.  its name has been autogenerated
	 */
	public SemanticInstance createInstance()
	{
		try
		{
			assert OWLClass != null;
		
			return SemanticRepository.getAvailableInstance().getSemanticInstance(OWLClass.createOWLIndividual(this.getLabel() + "_00" + counter++));
		}
		catch(Exception e)
		{
			throw new OMTException("ERROR: could not create instance", e);
		}
	}
	
	public boolean equals(Object o) {
		if (o != null && o instanceof SemanticClass) {
			SemanticClass i = (SemanticClass)o;
			if (OWLClass.equals(i.getOWLClass()))
				return true;
		}
		return false;
	}
	
	public int hashCode() {
		return OWLClass.hashCode();
	}
}
